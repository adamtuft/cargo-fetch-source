name: Release Please

# Runs when new content is merged into trunk. Maintains a release PR which produces a
# new release when merged into trunk. When this happens, automatically publish latest version
# to crates.io

on:
  push:
    branches:
      - trunk

env:
  RUST_BACKTRACE: 1

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    environment:
      name: publish
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      should_publish: ${{ steps.release.outputs.releases_created == 'true' && vars.CARGO_SHOULD_PUBLISH == 'true' }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
      - name: Log whether releases created
        run: echo "releases_created=${{ steps.release.outputs.releases_created }}"
      - name: Log version(s)
        if: ${{ steps.release.outputs.releases_created == 'true' }}
        run: |
          printf "created fetch-source:\n"
          printf "    [%s]\n" ${{ steps.release.outputs.fetch-source--version }}
          printf "created cargo-fetch-source:\n"
          printf "    [%s]\n" ${{ steps.release.outputs.cargo-fetch-source--version }}

  cargo-publish:
    runs-on: ubuntu-latest
    needs: release-please
    environment:
      name: publish
    env:
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    if: ${{ needs.release-please.outputs.should_publish == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Publish library to crates.io
        run: cargo publish --package fetch-source
      - name: Publish Cargo command to crates.io
        run: cargo publish --package cargo-fetch-source

  no-cargo-publish:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.should_publish != 'true' }}
    steps:
      - name: Log that nothing was published
        run: echo "Skipping cargo-publish because no releases created or CARGO_SHOULD_PUBLISH is not 'true'"
